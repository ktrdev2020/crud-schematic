import { createFeatureSelector, createSelector } from '@ngrx/store';
import { <%= classify(name) %>State, selectAll } from '../reducers/<%= dasherize(name) %>.reducer';

export const select<%= classify(name) %>State = createFeatureSelector<<%= classify(name) %>State>('<%= classify(name) %>');

// ðŸŒŸ Entity Selectors
export const selectAll<%= classify(name) %>s = createSelector(
  select<%= classify(name) %>State,
  selectAll
);

export const select<%= classify(name) %>Loading = createSelector(
  select<%= classify(name) %>State,
  state => state.loading
);

export const select<%= classify(name) %>Error = createSelector(
  select<%= classify(name) %>State,
  state => state.error
);

export const select<%= classify(name) %>Total = createSelector(
  select<%= classify(name) %>State,
  state => state.total
);

// âœ… Offset / Limit / Page
export const select<%= classify(name) %>Offset = createSelector(
  select<%= classify(name) %>State,
  state => state.offset
);

export const select<%= classify(name) %>Limit = createSelector(
  select<%= classify(name) %>State,
  state => state.limit
);

export const select<%= classify(name) %>CurrentPage = createSelector(
  select<%= classify(name) %>State,
  state => state.currentPage
);

// âœ… Total Pages
export const select<%= classify(name) %>TotalPages = createSelector(
  select<%= classify(name) %>Total,
  select<%= classify(name) %>Limit,
  (total, limit) => Math.ceil(total / limit)
);

// âœ… Select by ID (dynamic)
export const select<%= classify(name) %>ById = (id: string) =>
  createSelector(select<%= classify(name) %>State, state => state.entities[id]);

// âœ… Filtered (Predicate)
export const select<%= classify(name) %>Where = (predicate: (g: any) => boolean) =>
  createSelector(selectAll<%= classify(name) %>s, all => all.filter(predicate));

// âœ… Slice / Paged (for optional manual slicing)
export const select<%= classify(name) %>Paged = (limit: number, offset: number) =>
  createSelector(selectAll<%= classify(name) %>s, all => all.slice(offset, offset + limit));


// ðŸ†• âœ… Select current selectedId
export const select<%= classify(name) %>SelectedId = createSelector(
  select<%= classify(name) %>State,
  state => state.selectedId
);

// ðŸ†• âœ… Select current selected item (for details view)
export const selectSelected<%= classify(name) %> = createSelector(
  select<%= classify(name) %>State,
  select<%= classify(name) %>SelectedId,
  (state, selectedId) => selectedId ? state.entities[selectedId] ?? null : null
);

import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Store } from '@ngrx/store';
import { map, Observable, tap } from 'rxjs';
import { <%= classify(name) %>Dto, <%= classify(name) %>DetailDto } from '../../models/<%= dasherize(name) %>.model';
import * as <%= classify(name) %>Actions from '../../store/actions/<%= dasherize(name) %>.actions';
import * as <%= classify(name) %>Selectors from '../../store/selectors/<%= dasherize(name) %>.selectors';
import { <%= classify(name) %>ApiService } from '../../services/<%= dasherize(name) %>-api.service';

@Component({
  selector: 'app-<%= dasherize(name) %>-details',
  templateUrl: './<%= dasherize(name) %>-details.component.html',
  styleUrls: ['./<%= dasherize(name) %>-details.component.scss'],
  standalone: false,
})
export class <%= classify(name) %>DetailsComponent implements OnInit {
  <%= classify(name) %>Id!: number;
  loading$!: Observable<boolean>;
  <%= classify(name) %>List$?: Observable<<%= classify(name) %>DetailDto>;
  items? : <%= classify(name) %>DetailsDto;

  constructor(
    private route: ActivatedRoute,
    private router: Router,
    private store: Store,
    private apiService: <%= classify(name) %>ApiService
  ) {}

  ngOnInit(): void {
    const nav = this.router.getCurrentNavigation();
    this.items = nav?.extras?.state?.['data'] as <%= classify(name) %>DetailsDto;

    if (!this.items?.id) {
      // ถ้าไม่มี device ส่งมา กลับไปหน้าหลัก
      this.router.navigateByUrl('../<%= classify(name) %>');
      return;
    }

    this.<%= classify(name) %>Id = Number(this.items.id);

    // dispatch store
    this.store.dispatch(<%= classify(name) %>Actions.load<%= classify(name) %>ById({ id: this.<%= classify(name) %>Id }));

    // ✅ ดึงรายการจุดควบคุมจาก API
    this.<%= classify(name) %>Details$ = this.store.select(<%= classify(name) %>Selectors.select<%= classify(name) %>ById(this.<%= classify(name) %>Id.toString()));

    // ✅ สถานะ Loading จาก store
    this.loading$ = this.store.select(<%= classify(name) %>Selectors.select<%= classify(name) %>Loading);
  }

  doRefresh(event: any) {
    this.store.dispatch(<%= classify(name) %>Actions.load<%= classify(name) %>ById({ id: this.<%= classify(name) %>Id }));
    event.target.complete();
  }
}

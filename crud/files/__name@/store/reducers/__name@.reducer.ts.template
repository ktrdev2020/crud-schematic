
import { createReducer, on } from '@ngrx/store';
import { createEntityAdapter } from '@ngrx/entity';
import { {{ '{{' {{ '}}' }} classify name {{ '}}' }}Model } from '../../models/{{ '{{' {{ '}}' }} dasherize name {{ '}}' }}.model';
import * as {{ '{{' {{ '}}' }} classify name {{ '}}' }}Actions from '../actions/{{ '{{' {{ '}}' }} dasherize name {{ '}}' }}.actions';
import { {{ '{{' {{ '}}' }} classify name {{ '}}' }}State } from '../state/{{ '{{' {{ '}}' }} dasherize name {{ '}}' }}.state';

export const adapter = createEntityAdapter<{{ '{{' {{ '}}' }} classify name {{ '}}' }}Model>();
export const initialState: {{ '{{' {{ '}}' }} classify name {{ '}}' }}State = adapter.getInitialState({
  loading: false,
  error: null
});

export const {{ '{{' {{ '}}' }} camelize name {{ '}}' }}Reducer = createReducer(
  initialState,
  on({{ '{{' {{ '}}' }} classify name {{ '}}' }}Actions.load{{ '{{' {{ '}}' }} classify name {{ '}}' }}, state => ({ ...state, loading: true })),
  on({{ '{{' {{ '}}' }} classify name {{ '}}' }}Actions.load{{ '{{' {{ '}}' }} classify name {{ '}}' }}Success, (state, { data }) => adapter.setAll(data, { ...state, loading: false })),
  on({{ '{{' {{ '}}' }} classify name {{ '}}' }}Actions.load{{ '{{' {{ '}}' }} classify name {{ '}}' }}Failure, (state, { error }) => ({ ...state, loading: false, error })),
  on({{ '{{' {{ '}}' }} classify name {{ '}}' }}Actions.add{{ '{{' {{ '}}' }} classify name {{ '}}' }}, state => ({ ...state, loading: true })),
  on({{ '{{' {{ '}}' }} classify name {{ '}}' }}Actions.add{{ '{{' {{ '}}' }} classify name {{ '}}' }}Success, (state, { data }) => adapter.addOne(data, { ...state, loading: false })),
  on({{ '{{' {{ '}}' }} classify name {{ '}}' }}Actions.update{{ '{{' {{ '}}' }} classify name {{ '}}' }}Success, (state, { data }) => adapter.updateOne({ id: data.id, changes: data }, state)),
  on({{ '{{' {{ '}}' }} classify name {{ '}}' }}Actions.delete{{ '{{' {{ '}}' }} classify name {{ '}}' }}Success, (state, { id }) => adapter.removeOne(id, state)),
);

export const { selectAll, selectEntities } = adapter.getSelectors();

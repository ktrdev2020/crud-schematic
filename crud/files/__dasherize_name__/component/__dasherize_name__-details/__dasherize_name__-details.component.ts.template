import { Component, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { Store } from '@ngrx/store';
import { map, Observable, tap } from 'rxjs';
import { {{ classify_name }}Dto, {{ classify_name }}DetailDto } from '../../models/{{ dasherize_name }}.model';
import * as {{ classify_name }}Actions from '../../store/actions/{{ dasherize_name }}.actions';
import * as {{ classify_name }}Selectors from '../../store/selectors/{{ dasherize_name }}.selectors';
import { {{ classify_name }}ApiService } from '../../services/{{ dasherize_name }}-api.service';

@Component({
  selector: 'app-{{ dasherize_name }}-details',
  templateUrl: './{{ dasherize_name }}-details.component.html',
  styleUrls: ['./{{ dasherize_name }}-details.component.scss'],
  standalone: false,
})
export class {{ classify_name }}DetailsComponent implements OnInit {
  {{ classify_name }}Id!: number;
  loading$!: Observable<boolean>;
  {{ classify_name }}List$?: Observable<{{ classify_name }}DetailDto[]>;
  items? = any;

  constructor(
    private route: ActivatedRoute,
    private router: Router,
    private store: Store,
    private apiService: {{ classify_name }}ApiService
  ) {}

  ngOnInit(): void {
    const nav = this.router.getCurrentNavigation();
    this.items = nav?.extras?.state?.['data'];

    if (!this.items?.id) {
      // ถ้าไม่มี device ส่งมา กลับไปหน้าหลัก
      this.router.navigateByUrl('../{{ classify_name }}');
      return;
    }

    this.{{ classify_name }}Id = Number(this.items.id);

    // dispatch store
    this.store.dispatch({{ classify_name }}Actions.load{{ classify_name }}ById({ id: this.{{ classify_name }}Id }));

    // ✅ ดึงรายการจุดควบคุมจาก API
    this.{{ classify_name }}Details$ = this.store.select({{ classify_name }}Selectors.select{{ classify_name }}ById({ id: this.{{ classify_name }}Id }));

    // ✅ สถานะ Loading จาก store
    this.loading$ = this.store.select({{ classify_name }}Selectors.select{{ classify_name }}Loading);
  }

  doRefresh(event: any) {
    this.store.dispatch({{ classify_name }}Actions.load{{ classify_name }}ById({ id: this.{{ classify_name }}Id }));
    event.target.complete();
  }
}
